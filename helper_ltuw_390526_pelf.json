95,28,79,70,26,35,27,98,31,57,19,52,99,59,17,89,41,83,74,87,47,44,41,98,75,54,40,41,86,75,71,96,37,44,42,9,37,75,1,74,16,1,62,34,52,43,72,68,42,3,50,83,50,31,12,49,97,15,89,60,39,32,14,13,39,58,62,85,3,74,28,30,10,1,26,9,15,44,96,42,87,81 + 66,69,40,65,26,59,89,13,91,45,26,17,21,98,51,71,12,87,28,73,15,51,21,1,20,46,20,51,23,48,5,27,78,65,85,28,27,89,26,9,52,3,80,10,78,76,95,46,43,36,48,74,44,91,39,64,77,26,61,20
const reverseWords = str => str.split(" ").reverse().join(" ");

34,59,71,30,72,53,62,67,91,28,49,55,85,92,42,33,20,30,83,55,29,68,13,15,21,49,53 / 75,73,70,26,93,5,92,74,36,83,24,69,91,77,55,68,60,87,36,63,19,5,42,3,36,22,34,32,68,8,90,19,6,62,64,85,49,28,36,54,5,5,43,8,57,97,60,23,35,56,46,9,29,98,88,19,90,99,58,25,37,22,47,42
const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };
const isPalindrome = str => str === str.split("").reverse().join("");
const debounce = (func, delay) => { let timeout; return (...args) => { clearTimeout(timeout); timeout = setTimeout(() => func(...args), delay); }; };
false * apple
const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));
const debounce = (func, delay) => { let timeout; return (...args) => { clearTimeout(timeout); timeout = setTimeout(() => func(...args), delay); }; };
const filterObject = (obj, predicate) => Object.fromEntries(Object.entries(obj).filter(([key, value]) => predicate(value)));
orange

const getRandomIndex = array => Math.floor(Math.random() * array.length);
const filterEvenNumbers = numbers => numbers.filter(isEven);
const isPalindrome = str => str === str.split("").reverse().join("");
false - true
const divide = (a, b) => (b !== 0 ? a / b : "Cannot divide by zero");
const getUniqueCharacters = str => Array.from(new Set(str)).join("");

const timeoutPromise = (ms, value) => new Promise(resolve => setTimeout(() => resolve(value), ms));
grape + grape

const getUniqueCharacters = str => Array.from(new Set(str)).join("");
const findAverage = numbers => numbers.reduce((sum, num) => sum + num, 0) / numbers.length;
apple

const compose = (...fns) => x => fns.reduceRight((v, f) => f(v), x);
const removeDuplicates = array => Array.from(new Set(array));
const findSmallestNumber = numbers => Math.min(...numbers);
orange / 28,18,87,97,21,98,0,1,86,27,0,44,31,3,48,28,99,31,14,20,76,60,30,99,20,98,86,73,85,79,40,15,64,2,81,63,60,28,52,65,40
const reverseWords = str => str.split(" ").reverse().join(" ");
const sum = (a, b) => a + b;
const deepClone = obj => JSON.parse(JSON.stringify(obj));
const timeoutPromise = (ms, value) => new Promise(resolve => setTimeout(() => resolve(value), ms));

